apiVersion: apps/v1
kind: Deployment
metadata:
  name: fullstackapp-deployment
spec:
  replicas: 1  # number of instances
  selector:
    matchLabels:
      app: fullstackapp
  template:
    metadata:
      labels:
        app: fullstackapp
    spec:
      containers:
        - name: fullstackapp-container
          image: huitingfeng/fullstackapp:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080  # the port app runs on
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/fullstack
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user-name
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: user-password


---
apiVersion: v1
kind: Service
metadata:
  name: fullstackapp-service
spec:
  selector:
    app: fullstackapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer  # or ClusterIP if don't want an external IP


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fullstackappfrontend-deployment
spec:
  replicas: 1  # number of instances
  selector:
    matchLabels:
      app: fullstackappfrontend
  template:
    metadata:
      labels:
        app: fullstackappfrontend
    spec:
      containers:
        - name: fullstackappfrontend-container
          image: huitingfeng/fullstackappfrontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000  # the port app runs on


---
apiVersion: v1
kind: Service
metadata:
  name: fullstackappfrontend-service
spec:
  selector:
    app: fullstackappfrontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer  # or ClusterIP if don't want an external IP


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: studentsystem-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: nginx
  rules:
    - host: studentsystem
      http:
        paths:
          - path: /backend(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: fullstackapp-service
                port:
                  number: 80
          - path: /(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: fullstackappfrontend-service
                port:
                  number: 80
